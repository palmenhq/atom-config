{
  "_args": [
    [
      {
        "raw": "/private/var/folders/4s/t4gsb6cn5zb20gh_h_h5tdlw0000gn/T/d-11749-2592-9skg8p.wvb42qehfr/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/4s/t4gsb6cn5zb20gh_h_h5tdlw0000gn/T/d-11749-2592-9skg8p.wvb42qehfr/package.tgz",
        "spec": "/private/var/folders/4s/t4gsb6cn5zb20gh_h_h5tdlw0000gn/T/d-11749-2592-9skg8p.wvb42qehfr/package.tgz",
        "type": "local"
      },
      "/private/var/folders/4s/t4gsb6cn5zb20gh_h_h5tdlw0000gn/T/apm-install-dir-11749-2592-1og85yu.2mb2nh4cxr"
    ]
  ],
  "_from": "../d-11749-2592-9skg8p.wvb42qehfr/package.tgz",
  "_id": "mocha-test-runner@0.5.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/mocha-test-runner",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/4s/t4gsb6cn5zb20gh_h_h5tdlw0000gn/T/d-11749-2592-9skg8p.wvb42qehfr/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/4s/t4gsb6cn5zb20gh_h_h5tdlw0000gn/T/d-11749-2592-9skg8p.wvb42qehfr/package.tgz",
    "spec": "/private/var/folders/4s/t4gsb6cn5zb20gh_h_h5tdlw0000gn/T/d-11749-2592-9skg8p.wvb42qehfr/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-11749-2592-9skg8p.wvb42qehfr/package.tgz",
  "_shasum": "4c24742f206d642148195d420d6e0469c1331f6a",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/4s/t4gsb6cn5zb20gh_h_h5tdlw0000gn/T/d-11749-2592-9skg8p.wvb42qehfr/package.tgz",
  "_where": "/private/var/folders/4s/t4gsb6cn5zb20gh_h_h5tdlw0000gn/T/apm-install-dir-11749-2592-1og85yu.2mb2nh4cxr",
  "activationCommands": {
    "atom-workspace": [
      "mocha-test-runner:run",
      "mocha-test-runner:debug",
      "mocha-test-runner:run-previous",
      "mocha-test-runner:debug-previous"
    ],
    ".platform-darwin": [
      "settings-view:open"
    ],
    ".platform-win32": [
      "settings-view:open"
    ]
  },
  "bugs": {
    "url": "https://github.com/TabDigital/atom-mocha-test-runner/issues"
  },
  "dependencies": {
    "ansi-html-stream": "0.0.3",
    "atom-space-pen-views": "^2.0.3",
    "jsesc": "~0.4.3",
    "localeval": "~13.12.11",
    "process-tree": "1.0.2",
    "tree-kill": "0.0.6"
  },
  "description": "Run Mocha tests from within Atom",
  "devDependencies": {
    "coffee-script": "~1.7.1",
    "mocha": "~1.20.1"
  },
  "engines": {
    "atom": ">0.50.0"
  },
  "homepage": "https://github.com/TabDigital/atom-mocha-test-runner#readme",
  "license": "MIT",
  "main": "./lib/mocha-test-runner",
  "name": "mocha-test-runner",
  "optionalDependencies": {},
  "readme": "# Atom : Mocha test runner\n\n[![License](http://img.shields.io/badge/license-MIT-yellow.svg?style=flat)](https://github.com/TabDigital/atom-mocha-test-runner/blob/master/LICENSE.md)\n\nRuns [Mocha](https://github.com/visionmedia/mocha) unit tests from within Atom.\n\n- `ctrl-alt-m` runs either:\n  - the current test file\n  - or a single `it` / `describe` / `suite` / `test` if the cursor is on that line\n\n- `ctrl-alt-d` is the same as above, but with `Debug Options` added\n\n- `ctrl-alt-shift-m` re-runs the last test selection\n  - even if you switched to another tab\n\n- `ctrl-alt-shift-d` is the same as above, but with `Debug Options` added\n\n![Demo](https://raw.github.com/TabDigital/atom-mocha-test-runner/master/demo.gif)\n\n### Running Mocha\n\nThis plugin looks for the closest `package.json` to the current file,\nand run the corresponding `mocha`. This should automatically pick up the right version,\nas well as your `mocha.opts` settings.\n\nIf you don't have a `package.json` file, or if Mocha isn't installed locally,\nit will try to execute the global `mocha` command instead.\n\n### How does it work?\n\nTo run the selected test, it uses `--grep` on the test name.\nIn the case the name isn't unique enough, it might run a few other tests.\nIn practice we found this is not an issue, and you still get fast TDD feedback loops.\n\n### Settings\n\nIf you go to the settings pane, you can set the following values:\n\n- `Node binary path`: path to the `node` executable (*defaults to `/usr/local/bin/node`*).\n- `Text only`: remove any colors from the Mocha output (*defaults to `false`*).\n- `Show context information`: display extra information for troubleshooting (*defaults to `false`*).\n- `Options`: append given options always to Mocha binary  (*optional*).\n- `Options for Debug`: append given options to Mocha binary to enable debugging.\n- `Env`: environment variables, useful for specifying `NODE_ENV`, etc.\n\nYou can also change the style of the results window. Simply go to `Open Your Stylesheet` in the main menu, and add\n\n```css\n.mocha-test-runner .results {\n  font-size: 1.5em;\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TabDigital/atom-mocha-test-runner.git"
  },
  "version": "0.5.1"
}
